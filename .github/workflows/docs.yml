name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-docs-${{ hashFiles('**/requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-docs-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
        pip install -e .
    
    - name: Build Sphinx documentation
      run: |
        cd docs
        make clean
        make html
        cd ..
    
    - name: Check for documentation warnings
      run: |
        cd docs
        ! make html 2>&1 | grep -E "(WARNING|ERROR)"
        cd ..
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/_build/html/
    
    - name: Deploy to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
        cname: kew-mnist-synthetic.github.io

  check-readme:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install readme-renderer
    
    - name: Check README rendering
      run: |
        python -m readme_renderer README.md -o /tmp/README.html
    
    - name: Check for broken links in README
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        config-file: '.github/markdown-link-check-config.json'

  generate-coverage-badge:
    runs-on: ubuntu-latest
    needs: build-docs
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage-badge
        pip install -r requirements/test.txt
        pip install -e .
    
    - name: Generate coverage
      run: |
        pytest tests/ --cov=src/kew_synthetic --cov-report=term --cov-report=xml
    
    - name: Create coverage badge
      run: |
        coverage-badge -o docs/images/coverage.svg -f
    
    - name: Commit badge
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/images/coverage.svg
        git diff --quiet && git diff --staged --quiet || git commit -m "Update coverage badge"
        git push